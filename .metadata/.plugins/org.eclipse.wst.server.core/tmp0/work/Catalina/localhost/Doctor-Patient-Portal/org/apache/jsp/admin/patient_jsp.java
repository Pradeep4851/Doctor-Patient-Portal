/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2025-05-13 04:23:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.hms.entity.Doctor;
import com.hms.dao.DoctorDAO;
import com.hms.entity.Appointment;
import java.util.List;
import com.hms.db.DBConnection;
import com.hms.dao.AppointmentDAO;

public final class patient_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/component/allcss.jsp", Long.valueOf(1681545492000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1746786904513L));
    _jspx_dependants.put("jar:file:/D:/Pradeep/Doctor-Patient-Portal-AdvanceJavaWebProject-main/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Doctor-Patient-Portal/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664433678000L));
    _jspx_dependants.put("/admin/navbar.jsp", Long.valueOf(1681545492000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(8);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.hms.db.DBConnection");
    _jspx_imports_classes.add("com.hms.entity.Doctor");
    _jspx_imports_classes.add("com.hms.dao.DoctorDAO");
    _jspx_imports_classes.add("com.hms.entity.Appointment");
    _jspx_imports_classes.add("com.hms.dao.AppointmentDAO");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- for jstl tag -->\r\n");
      out.write("\r\n");
      out.write("<!-- end of jstl tag -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Patient Details | Admin</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Boostrap CSS -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<!-- End Boostrap CSS -->\r\n");
      out.write("\r\n");
      out.write("<!-- Font awesome css -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css\"\r\n");
      out.write("	integrity=\"sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==\"\r\n");
      out.write("	crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("<!-- End Font awesome css -->\r\n");
      out.write("\r\n");
      out.write("<!--font awesome css-->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Boostrap JS -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- End Boostrap JS -->\r\n");
      out.write("\r\n");
      out.write("<style>\n");
      out.write("body {\n");
      out.write("	margin: 0;\n");
      out.write("	padding: 0;\n");
      out.write("	width: 100%;\n");
      out.write("	overflow-x: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".my-bg-color {\n");
      out.write("	background-color: #4568dc;\r\n");
      out.write("	\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".myP-color{\r\n");
      out.write("	color: #4568dc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- customs css for this page -->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".my-card {\r\n");
      out.write("	box-shadow: 0px 0px 10px 1px maroon;\r\n");
      out.write("	/*box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.3);*/\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- end of customs css for this page -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-danger\">\r\n");
      out.write("	<div class=\"container-fluid\">\r\n");
      out.write("		<a class=\"navbar-brand\" href=\"index.jsp\"><i\r\n");
      out.write("			class=\"fa-sharp fa-solid fa-hospital\"></i> Doctor Patient Portal</a>\r\n");
      out.write("		<!-- 		<a class=\"navbar-brand\" href=\"index.jsp\"><i\r\n");
      out.write("			class=\"fa-solid fa-house-chimney-medical\"></i> E-HOSPITAL</a> -->\r\n");
      out.write("		<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n");
      out.write("			data-bs-target=\"#navbarSupportedContent\"\r\n");
      out.write("			aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n");
      out.write("			aria-label=\"Toggle navigation\">\r\n");
      out.write("			<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("			<!-- original ul <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\"> -->\r\n");
      out.write("			<ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"index.jsp\"><i class=\"fa fa-home\"></i>\r\n");
      out.write("						HOME</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"doctor.jsp\"><i\r\n");
      out.write("						class=\"fa-solid fa-user-doctor\"></i> DOCTOR</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"view_doctor.jsp\"><i\r\n");
      out.write("						class=\"fa-solid fa-list\"></i> VIEW DOCTOR</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"patient.jsp\"><i\r\n");
      out.write("						class=\"fa fa-wheelchair\"></i> PATIENT</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"dropdown\">\r\n");
      out.write("				<button class=\"btn btn-light  dropdown-toggle\" type=\"button\"\r\n");
      out.write("					id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\"\r\n");
      out.write("					aria-expanded=\"false\">\r\n");
      out.write("					<i class=\"fa fa-universal-access\"></i> Admin\r\n");
      out.write("				</button>\r\n");
      out.write("				<ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n");
      out.write("					<li><a class=\"dropdown-item\" href=\"../adminLogout\">Logout</a></li>\r\n");
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"col-md-12 p-5\">\r\n");
      out.write("		<div class=\"card my-card\">\r\n");
      out.write("			<div class=\"card-body\">\r\n");
      out.write("				<p class=\"text-center text-danger fs-3\">Patient Details</p>\r\n");
      out.write("\r\n");
      out.write("				<table class=\"table table-success table-striped\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr class=\"table\">\r\n");
      out.write("							<th scope=\"col\" style=\"padding-right: 70px\">Full Name</th>\r\n");
      out.write("							<th scope=\"col\">Gender</th>\r\n");
      out.write("							<th scope=\"col\">Age</th>\r\n");
      out.write("							<th scope=\"col\">Appointment</th>\r\n");
      out.write("							<th scope=\"col\">Email</th>\r\n");
      out.write("							<th scope=\"col\">Phone</th>\r\n");
      out.write("							<th scope=\"col\" style=\"padding-right: 50px\">Diseases</th>\r\n");
      out.write("							<th scope=\"col\" style=\"padding-right: 70px\">Doctor Name</th>\r\n");
      out.write("							<th scope=\"col\">Address</th>\r\n");
      out.write("							<th scope=\"col\" style=\"padding-right: 100px\">Status</th>\r\n");
      out.write("\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("\r\n");
      out.write("						");

						AppointmentDAO appDAO = new AppointmentDAO(DBConnection.getConn());
						DoctorDAO docDAO = new DoctorDAO(DBConnection.getConn());
						List<Appointment> list = appDAO.getAllAppointment();
						for (Appointment appList : list) {
							Doctor doctor = docDAO.getDoctorById(appList.getDoctorId());
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th>");
      out.print(appList.getFullName());
      out.write("</th>\r\n");
      out.write("							<td>");
      out.print(appList.getGender());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(appList.getAge());
      out.write("</td>\r\n");
      out.write("							");
      out.write("\r\n");
      out.write("							<td>");
      out.print(appList.getAppointmentDate());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(appList.getEmail());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(appList.getPhone());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(appList.getDiseases());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(doctor.getFullName());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(appList.getAddress());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(appList.getStatus());
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("						</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					</tbody>\r\n");
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
